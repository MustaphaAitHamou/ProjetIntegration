name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      # Optionnel si vous voulez utiliser services.docker
      docker:
        image: docker:20.10.16
        options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build & start services
        run: |
          docker compose up -d --build

      - name: Wait for backend to be ready
        run: |
          docker compose exec -T backend sh -c \
            'until nc -z localhost 5000; do echo Waiting for API...; sleep 1; done'

      - name: Run backend tests
        run: |
          docker compose exec -T backend pytest --maxfail=1 --disable-warnings -q

      - name: Upload backend coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: backend/coverage.xml
          fail_ci_if_error: true

      - name: Run frontend tests
        working-directory: frontend
        run: |
          npm ci
          npm test -- --coverage --watchAll=false

      - name: Upload frontend coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: frontend/coverage/lcov.info
          fail_ci_if_error: true

      - name: Wait for frontend to be ready
        run: |
          npx wait-on http://localhost:3000 && sleep 5

      - name: Run Cypress E2E
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          start: docker compose up -d frontend backend db && npx wait-on http://localhost:3000

      - name: Tear down
        if: always()
        run: docker compose down --volumes
