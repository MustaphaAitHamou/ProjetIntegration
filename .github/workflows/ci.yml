name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: üêç Backend Tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: appdb
          MYSQL_USER: admin
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: rootpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uadmin -psecret"
          --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install backend deps
        run: |
          pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h "127.0.0.1" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" --silent; do
            echo "Waiting for MySQL‚Ä¶"
            sleep 2
          done
        env:
          MYSQL_USER: admin
          MYSQL_PASSWORD: secret

      - name: Run pytest
        working-directory: backend
        run: |
          pytest --maxfail=1 --disable-warnings --cov=.

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/coverage.xml
          fail_ci_if_error: true

  frontend-tests:
    name: ‚öõÔ∏è Frontend Tests
    runs-on: ubuntu-latest
    needs: backend-tests

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend deps
        run: |
          cd frontend
          npm ci

      - name: Run Jest & Coverage
        run: |
          cd frontend
          npm test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./frontend/coverage/lcov.info
          fail_ci_if_error: true

  e2e-tests:
    name: üåê E2E Tests with Cypress
    runs-on: ubuntu-latest
    needs: frontend-tests

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Start Backend API
        run: |
          cd backend
          pip install -r requirements.txt
          uvicorn app:app --host 0.0.0.0 --port 5000 &
      
      - name: Start Frontend App
        run: |
          cd frontend
          npm ci
          npm start &

      - name: Wait for API & Frontend
        run: |
          npx wait-on http://localhost:5000/users
          npx wait-on http://localhost:3000

      - name: Run Cypress
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          record: false

      - name: Tear down servers
        if: always()
        run: |
          kill $(jobs -p) || true
