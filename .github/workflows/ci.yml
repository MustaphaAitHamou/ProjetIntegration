name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: 🐍 Backend Tests
    runs-on: ubuntu-latest

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_NAME: appdb
      DB_USER: admin
      DB_PASSWORD: secret

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: appdb
          MYSQL_USER: admin
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: rootpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uadmin -psecret"
          --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install backend dependencies
        run: |
          pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h "127.0.0.1" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" --silent; do
            echo "Waiting for MySQL…"
            sleep 2
          done

      - name: Run pytest with XML coverage
        working-directory: backend
        env:
          PYTHONPATH: ${{ github.workspace }}/backend
        run: |
          pytest --maxfail=1 --disable-warnings --cov=. --cov-report xml:coverage.xml

      - name: Check CODECOV_TOKEN exists
        run: |
          if [ -z "${{ secrets.CODECOV_TOKEN }}" ]; then
            echo "🚨 CODECOV_TOKEN is empty!"
            exit 1
          else
            echo "✅ CODECOV_TOKEN is set"
          fi

      - name: Upload backend coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: backend/coverage.xml
          fail_ci_if_error: true

  # … (les autres jobs restent inchangés)
